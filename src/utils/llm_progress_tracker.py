# src/utils/llm_progress_tracker.py

import asyncio
import logging
from typing import Optional
from aiogram import Bot

logger = logging.getLogger(__name__)


class LLMProgressTracker:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ LLM –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç typing indicator –∏ —Å—Ç–∞—Ç—É—Å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–æ –≤—Ä–µ–º—è –¥–æ–ª–≥–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.
    """
    
    def __init__(self, bot: Bot, chat_id: int):
        self.bot = bot
        self.chat_id = chat_id
        self.status_message = None
        self.is_active = False
    
    async def start(self, initial_text: str = "ü§ñ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∑–∞–ø—Ä–æ—Å..."):
        """
        –ù–∞—á–∏–Ω–∞–µ—Ç –ø–æ–∫–∞–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.
        
        Args:
            initial_text: –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞
        """
        try:
            self.is_active = True
            
            # –°–Ω–∞—á–∞–ª–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º typing indicator
            await self.bot.send_chat_action(self.chat_id, "typing")
            
            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–∏–¥–µ–ª typing
            await asyncio.sleep(1.5)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            self.status_message = await self.bot.send_message(
                self.chat_id, 
                initial_text
            )
            logger.debug(f"Started LLM progress tracking for chat {self.chat_id}")
            
        except Exception as e:
            logger.error(f"Error starting LLM progress tracker: {e}")
            self.is_active = False
    
    async def update(self, text: str, step: Optional[int] = None, total: Optional[int] = None):
        """
        –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.
        
        Args:
            text: –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞
            step: –¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            total: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç—Ç–∞–ø–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        """
        if not self.is_active or not self.status_message:
            return
            
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º —ç—Ç–∞–ø–∞
            status_text = text
            if step and total:
                status_text += f" ({step}/{total})"
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await self.status_message.edit_text(status_text)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º typing indicator
            await self.bot.send_chat_action(self.chat_id, "typing")
            
            logger.debug(f"Updated LLM progress: {status_text}")
            
        except Exception as e:
            logger.error(f"Error updating LLM progress tracker: {e}")
    
    async def finish(self, keep_message: bool = False):
        """
        –ó–∞–≤–µ—Ä—à–∞–µ—Ç –ø–æ–∫–∞–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.
        
        Args:
            keep_message: –ï—Å–ª–∏ True, –Ω–µ —É–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        """
        if not self.is_active:
            return
            
        try:
            self.is_active = False
            
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ç—É—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ –ø—Ä–æ—Å—è—Ç –æ—Å—Ç–∞–≤–∏—Ç—å
            if self.status_message and not keep_message:
                await self.status_message.delete()
                logger.debug(f"Finished and deleted LLM progress message for chat {self.chat_id}")
            elif keep_message:
                logger.debug(f"Finished LLM progress tracking, keeping message for chat {self.chat_id}")
                
        except Exception as e:
            logger.error(f"Error finishing LLM progress tracker: {e}")
    
    async def __aenter__(self):
        """–ü–æ–¥–¥–µ—Ä–∂–∫–∞ async context manager"""
        return self
    
    async def __aexit__(self, exc_type, exc_val, exc_tb):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"""
        await self.finish()