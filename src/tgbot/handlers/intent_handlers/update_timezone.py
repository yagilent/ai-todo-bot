# src/tgbot/handlers/intent_handlers/update_timezone.py
import logging
from aiogram import types
from sqlalchemy.ext.asyncio import AsyncSession
import pytz

from src.database.crud import update_user_timezone
from src.database.models import User
from src.llm.gemini_client import parse_timezone_from_text

logger = logging.getLogger(__name__)

async def handle_update_timezone(
    message: types.Message,
    session: AsyncSession,
    db_user: User,
    params: dict
):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–µ –Ω–∞–º–µ—Ä–µ–Ω–∏–µ –æ–±–Ω–æ–≤–∏—Ç—å —Ç–∞–π–º–∑–æ–Ω—É."""
    # ... (–≤–µ—Å—å –∫–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ handle_update_timezone_intent) ...
    location_text = params.get("location_text")
    user_telegram_id = db_user.telegram_id
    if not location_text:
        # ... (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏) ...
        return

    logger.info(f"Handling update_timezone intent for user {user_telegram_id}. Text: '{location_text}'")
    parsed_timezone_iana = await parse_timezone_from_text(location_text)

    if parsed_timezone_iana:
        try:
            pytz.timezone(parsed_timezone_iana)
            await update_user_timezone(
                session=session,
                telegram_id=user_telegram_id,
                timezone=parsed_timezone_iana,
                timezone_text=location_text
            )
            logger.info(f"Timezone updated via intent for user {user_telegram_id} to {parsed_timezone_iana}")
            await message.reply(f"‚úÖ –í–∞—à —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞: {parsed_timezone_iana}")
        except pytz.UnknownTimeZoneError:
             # ... (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏) ...
             await message.reply("ü§î –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≤–∞–ª–∏–¥–Ω—É—é —Ç–∞–π–º–∑–æ–Ω—É...")
        except Exception as e:
             # ... (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏) ...
             await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–∞–π–º–∑–æ–Ω—ã.")
    else:
        # ... (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏) ...
        await message.reply("üòï –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å...")